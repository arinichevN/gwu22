
UDP шлюз для DHT22

1 Установка
1.1 Требования
Функции управления пинами реализованы для процессора Allwinner A20 и H3. Скрипт-установщик
работает в командной оболочке bash.
1.2 Настройка перед установкой:
- место установки исполняемого файла: файл build.sh константа INST_DIR
- место установки файла конфигурации: файл build.sh константа CONF_DIR (должна соответствовать CONF_DIR из main.h)
- см. ./lib/gpio/README
- число попыток чтения с датчика при неудаче: файл main.h константа RETRY_NUM
1.3 Команды для установки:
cd gwu22
Полная установка:
sudo ./build.sh full
Полная установка, не затрагивая конфигурационных файлов:
sudo ./build.sh full_nc
Для тестирования (файлы не копируются за пределы текущей папки):
sudo ./build.sh part_debug

2 Настройка после установки:
Общие настройки демон читает из файла CONFIG_FILE (main.h),
 где
 port - порт (должен быть уникальным в рамках хоста);
 PID_path - путь к файлу блокировки;
 retry_count - число попыток чтения с датчика при неудаче.
Настройки для датчиков демон читает из файла DEVICE_FILE (main.h):
 где
 pin - физический номер порта к которому подключен датчик DHT22;
 temp_id - уникальный номер датчика температуры (выбирается произвольно, 
 в дальнейшем, по нему можно будет получить значение температуры с датчика на данном порте);
 hum_id - уникальный номер датчика влажности (выбирается произвольно, 
 в дальнейшем, по нему можно будет получить значение влажности с датчика на данном порте).
Настройки для коррекции измерений демон читает из файла LCORRECTION_FILE (main.h):
 device_id - идентификатор датчика (из файла DEVICE_FILE);
 factor - коэффициент;
 delta - приращение.
3 Запуск
При полной установке запускается автоматически, вмести с операционной системой.
sudo gwu22
В режиме отладки (не отключается от терминала и выдает сообщения):
sudo gwu22_dbg
Если приложение установлено для тестирования:
sudo ./gwu22_dbg

4 Управление
4.1 Список команд
см. ./util.c printHelp()

4.2 Графический интерфейс пользователя
для чтения результатов измерений:
https://github.com/arinichevN/monitor_cl 
для отправки общих для всех демонов команд:
https://github.com/arinichevN/app_cl

4.3 Примеры
Для рассылки udp пакетов используется утилита udpcl (https://github.com/arinichevN/udpcl)
Утилита netcat не подходит, так как разрывает пакеты, встречая символ '\n'
Параметры утилиты udpcl следует заменить на свои.
перезагрузка с чтением всех настроек:
udpcl ars '' 192.168.1.250 49161 2
запрос температуры для датчика №1 и №2:
udpcl gfts 1\n2\n 192.168.1.250 49161 2

